name: Label & comment issues

on:
  issues:
    types:
      - reopened
      - opened
      - closed # added trigger for closed issues
  pull_request:
    types:
      - opened # trigger when a pull request is opened

jobs:
  label_issues:
    if: github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: attach label to issues
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["issue", "fix"]
            })

      - name: Comment on new issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Thanks for opening this issue! We'll take a look as soon as possible.

  comment_on_closed_issue:
    if: github.event_name == 'issues' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Comment when issue is closed
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            âœ… The issue is now resolved.

  congratulate_first_pr:
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Congratulate on first pull request
        uses: actions/github-script@v6
        with:
          script: |
            const pr = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "all",
              per_page: 100
            });

            const firstPR = pr.data.filter(p => p.user.login === context.payload.pull_request.user.login);

            if (firstPR.length === 1) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "ðŸŽ‰ Congratulations on opening your first pull request!"
              });
            }
